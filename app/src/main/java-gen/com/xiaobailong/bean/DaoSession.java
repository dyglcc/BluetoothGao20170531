package com.xiaobailong.bean;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.xiaobailong.bean.Years;
import com.xiaobailong.bean.Classes;
import com.xiaobailong.bean.Devices;
import com.xiaobailong.bean.Time_;
import com.xiaobailong.bean.Student;
import com.xiaobailong.bean.Examination;
import com.xiaobailong.bean.Scores;

import com.xiaobailong.bean.YearsDao;
import com.xiaobailong.bean.ClassesDao;
import com.xiaobailong.bean.DevicesDao;
import com.xiaobailong.bean.Time_Dao;
import com.xiaobailong.bean.StudentDao;
import com.xiaobailong.bean.ExaminationDao;
import com.xiaobailong.bean.ScoresDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig yearsDaoConfig;
    private final DaoConfig classesDaoConfig;
    private final DaoConfig devicesDaoConfig;
    private final DaoConfig time_DaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig examinationDaoConfig;
    private final DaoConfig scoresDaoConfig;

    private final YearsDao yearsDao;
    private final ClassesDao classesDao;
    private final DevicesDao devicesDao;
    private final Time_Dao time_Dao;
    private final StudentDao studentDao;
    private final ExaminationDao examinationDao;
    private final ScoresDao scoresDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        yearsDaoConfig = daoConfigMap.get(YearsDao.class).clone();
        yearsDaoConfig.initIdentityScope(type);

        classesDaoConfig = daoConfigMap.get(ClassesDao.class).clone();
        classesDaoConfig.initIdentityScope(type);

        devicesDaoConfig = daoConfigMap.get(DevicesDao.class).clone();
        devicesDaoConfig.initIdentityScope(type);

        time_DaoConfig = daoConfigMap.get(Time_Dao.class).clone();
        time_DaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        examinationDaoConfig = daoConfigMap.get(ExaminationDao.class).clone();
        examinationDaoConfig.initIdentityScope(type);

        scoresDaoConfig = daoConfigMap.get(ScoresDao.class).clone();
        scoresDaoConfig.initIdentityScope(type);

        yearsDao = new YearsDao(yearsDaoConfig, this);
        classesDao = new ClassesDao(classesDaoConfig, this);
        devicesDao = new DevicesDao(devicesDaoConfig, this);
        time_Dao = new Time_Dao(time_DaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        examinationDao = new ExaminationDao(examinationDaoConfig, this);
        scoresDao = new ScoresDao(scoresDaoConfig, this);

        registerDao(Years.class, yearsDao);
        registerDao(Classes.class, classesDao);
        registerDao(Devices.class, devicesDao);
        registerDao(Time_.class, time_Dao);
        registerDao(Student.class, studentDao);
        registerDao(Examination.class, examinationDao);
        registerDao(Scores.class, scoresDao);
    }
    
    public void clear() {
        yearsDaoConfig.clearIdentityScope();
        classesDaoConfig.clearIdentityScope();
        devicesDaoConfig.clearIdentityScope();
        time_DaoConfig.clearIdentityScope();
        studentDaoConfig.clearIdentityScope();
        examinationDaoConfig.clearIdentityScope();
        scoresDaoConfig.clearIdentityScope();
    }

    public YearsDao getYearsDao() {
        return yearsDao;
    }

    public ClassesDao getClassesDao() {
        return classesDao;
    }

    public DevicesDao getDevicesDao() {
        return devicesDao;
    }

    public Time_Dao getTime_Dao() {
        return time_Dao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public ExaminationDao getExaminationDao() {
        return examinationDao;
    }

    public ScoresDao getScoresDao() {
        return scoresDao;
    }

}
